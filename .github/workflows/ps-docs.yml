name: Documentation

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Allow only one concurrent deployment
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Generate documentation site
        shell: pwsh
        run: |
          Write-Host "Generating documentation site..." -ForegroundColor Green
          
          # Create output directory
          New-Item -Path "./docs-site" -ItemType Directory -Force
          
          # Copy main documentation files
          $docFiles = @(
            @{Source = "README.md"; Target = "index.md"}
            @{Source = "Docs/API-Reference.md"; Target = "api-reference.md"}
            @{Source = "Docs/Configuration.md"; Target = "configuration.md"}
            @{Source = "TODO.md"; Target = "roadmap.md"}
            @{Source = "CHANGELOG.md"; Target = "changelog.md"}
            @{Source = "CONTRIBUTING.md"; Target = "contributing.md"}
            @{Source = "Examples/Basic-Usage.ps1"; Target = "examples.md"}
          )
          
          foreach ($doc in $docFiles) {
            if (Test-Path $doc.Source) {
              if ($doc.Source -eq "Examples/Basic-Usage.ps1") {
                # Convert PowerShell examples to markdown
                $content = Get-Content $doc.Source -Raw
                $mdContent = @"
          # Examples
          
          \`\`\`powershell
          $content
          \`\`\`
          "@
                Set-Content -Path "./docs-site/$($doc.Target)" -Value $mdContent
              } else {
                Copy-Item -Path $doc.Source -Destination "./docs-site/$($doc.Target)" -Force
              }
              Write-Host "✓ Added $($doc.Source)" -ForegroundColor Green
            } else {
              Write-Host "⚠ Missing $($doc.Source)" -ForegroundColor Yellow
            }
          }
          
          # Create navigation file
          $navContent = @"
          # WhisperSubtitle Documentation
          
          - [Home](index.md)
          - [API Reference](api-reference.md)
          - [Configuration](configuration.md)
          - [Examples](examples.md)
          - [Roadmap](roadmap.md)
          - [Changelog](changelog.md)
          - [Contributing](contributing.md)
          "@
          Set-Content -Path "./docs-site/_sidebar.md" -Value $navContent
          
          Write-Host "✅ Documentation site generated" -ForegroundColor Green

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs-site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
